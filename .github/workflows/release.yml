name: Release

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*

  forensicstore:
    name: forensicstore
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - name: Setup go 1.13
        uses: actions/setup-go@v1
        with: {go-version: '1.13'}
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Build
        run: go build .
        working-directory: ./cmd/forensicstore

      - name: Pack UNIX
        run: |
          zip -r ${{ matrix.os }}.zip forensicstore*
          mv ${{ matrix.os }}.zip ../..
        working-directory: ./cmd/forensicstore
        shell: bash
        if: matrix.os != 'windows-latest'
      - name: Pack Windows
        run: |
          7z a ${{ matrix.os }}.zip forensicstore*
          mv ${{ matrix.os }}.zip ../..
        working-directory: ./cmd/forensicstore
        shell: bash
        if: matrix.os == 'windows-latest'

      - run: echo "::set-output name=upload_url::https://uploads.github.com/repos/$GITHUB_REPOSITORY/releases/$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)/assets{?name,label}"
        shell: bash
        id: release

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./${{ matrix.os }}.zip
          asset_name: ${{ matrix.os }}.zip
          asset_content_type: application/zip
